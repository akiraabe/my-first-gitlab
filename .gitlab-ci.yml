# テスト用ＤＢの Docker image
# - コロンの左側をテストコード側の接続先のホスト名として使用
services:
  - mysql:8

# テスト用ＤＢの定義
# - テストコード側での接続先ＤＢ名などは、ここで定義した値を指定
variables:
  MYSQL_ROOT_PASSWORD: root
  MYSQL_DATABASE: test
  TZ: 'Asia/Tokyo'
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"


image: amazoncorretto:11

stages:
  - test
  - deploy

#
# コーディング規約に準拠しているか検証し、結果のHTMLを生成する
#
job-checkstyle:
  stage: test
  script:
    - ./mvnw checkstyle:checkstyle
  artifacts:
    when: always
    paths:
      - target/site/*
  tags: [docker]
  allow_failure: true
  except:
    - tags

job-spotbugs:
  stage: test
  script:
    - ./mvnw compile spotbugs:spotbugs
  artifacts:
    when: always
    paths:
      - target/spotbugsXml.xml
      #- target/site/spotbugs.html
  tags: [docker]
  allow_failure: true
  except:
    - tags

#
# テストを実行し、結果のHTMLを生成する
# - GitLabのpipeline画面のTestタブにも結果を表示する
#
job-junit:
  stage: test
  script:
    - ./mvnw clean
    # - mvn surefire-report:report -Djacoco.skip=true --no-transfer-progress
    - ./mvnw surefire-report:report --no-transfer-progress
  artifacts:
    when: on_success
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml
    paths:
      - target/site/*
  tags: [docker]
  except:
    - tags


job-deploy:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - ./mvnw package -DskipTests=true
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/docker/Dockerfile
      --no-push
      --destination $CI_REGISTRY_IMAGE/path/to/your/image:version
      --tarPath image.tar
  artifacts:
    paths:
    - image.tar
    when: on_success